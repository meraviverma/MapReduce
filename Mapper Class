public class WordCount {
 public static class TokenizerMapper extends Mapper<Object, Text, Text, IntWritable>{
    private final static IntWritable one = new IntWritable(1);
    private Text word = new Text();
    public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
     StringTokenizer itr = new StringTokenizer(value.toString());
     while (itr.hasMoreTokens()) {
       word.set(itr.nextToken());
       context.write(word, one);
     }
    }
 }
 
 -----------------------------------Explanation-----------------------------------------
 
    In line 1 we are taking a class by name WordCount
    In line 2 we are extending the Mapper default class having the arguments keyIn as LongWritable and ValueIn as Text and KeyOut as Text and ValueOut as IntWritable.
    In line 3 we are declaring a IntWritable variable ‘one’ with value as 1
    In line 4  we are declaring a Text variable ‘word’ to store the output keys
    In line 5 we are overriding the map method which will run one time for every line.
    In line 6 we are storing the line in a string tokenizer variable itr
    In line 7 we have given an while condition on the variable itr if it as one or more tokens then it will enter the while loop.
    In line 8 Assign each word from the tokenizer(of String type) to a Text word
    In line 9  Form key value pairs for each word as <word,one> and push it to the output context
